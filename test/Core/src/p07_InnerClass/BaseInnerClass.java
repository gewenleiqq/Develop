package p07_InnerClass;

/*
 * 内部类是指在一个外部类的内部再定义一个类。
 * 内部类作为外部类的一个成员，并且依附于外部类而存在的。
 * 内部类可为静态，可用protected和private修饰（而外部类只能使用public和缺省的包访问权限）。
 * 内部类主要有以下几类：成员内部类、局部内部类、静态内部类、匿名内部类
 * 为什么需要内部类？典型的情况是，内部类继承自某个类或实现某个接口，内部类的代码操作创建其的外围类的对象。
 * 所以你可以认为内部类提供了某种进入其外围类的窗口。
 * 使用内部类最吸引人的原因是：每个内部类都能独立地继承自一个（接口的）实现，所以无论外围类是否已经继承了某个（接口的）实现，对于内部类都没有影响。
 * 如果没有内部类提供的可以继承多个具体的或抽象的类的能力，一些设计与编程问题就很难解决。
 * 从这个角度看，内部类使得多重继承的解决方案变得完整。接口解决了部分问题，而内部类有效地实现了“多重继承”。
 */
public abstract class BaseInnerClass{
	
}